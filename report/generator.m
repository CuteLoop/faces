function generator()
    %% Setup the Report
    import mlreportgen.report.*
    import mlreportgen.dom.*

    % Define output report names
    pdfReportName = 'FinalDocumentationReport.pdf';
    docxReportName = 'FinalDocumentationReport.docx';

    % Create Report objects
    pdfRpt = Report('FinalDocumentationReport','pdf');
    docxRpt = Report('FinalDocumentationReport','docx');

    % Common setup for both reports
    pdfRpt.Layout.Landscape = false; % Set report orientation
    pdfRpt.TitlePage.Title = 'Project Code Documentation Report';
    pdfRpt.TitlePage.Subtitle = 'Generated by MATLAB Report Generator';
    pdfRpt.TitlePage.Author = 'Your Name';

    docxRpt.Layout.Landscape = false; % Set report orientation
    docxRpt.TitlePage.Title = 'Project Code Documentation Report';
    docxRpt.TitlePage.Subtitle = 'Generated by MATLAB Report Generator';
    docxRpt.TitlePage.Author = 'Your Name';

    % Build content for both reports
    buildReportContent(pdfRpt);
    buildReportContent(docxRpt);

    % View the PDF report (if supported on your system)
    rptview(pdfRpt);

    % The DOCX report can now be tweaked manually in a word processor
    % before converting to PDF.
end

%% Local Function Definitions
function buildReportContent(rpt)
    import mlreportgen.report.*
    import mlreportgen.dom.*

    open(rpt);

    % Add a table of contents
    toc = TableOfContents;
    add(rpt,toc);

    % Find all the improved code files (report_*.m)
    files = dir('report_*.m');
    if isempty(files)
        warning('No report_*.m files found in the current directory.');
    end

    %% Iterate Over Each File
    for i = 1:length(files)
        filename = files(i).name;

        % Create a chapter for each file
        ch = Chapter();
        ch.Title = strrep(filename,'_','\_'); % Escape underscores in titles

        % Add a brief introduction about the file
        p = Paragraph(['This section documents the code found in ', filename, '.']);
        p.Style = {Color('Black'),FontSize('12pt')};
        add(ch,p);

        % Insert the code as a listing
        codeSection = Section('Documented Code');
        codeObj = CodeExtraction(filename);
        codeBlock = Code(codeObj);
        add(codeSection, codeBlock);
        add(ch, codeSection);

        % Optional figure insertion code (commented out)
        %{
        run(filename);
        figHandles = findall(0,'Type','figure');
        for f = figHandles'
            % Save figure to a temporary image file
            imgName = [tempname,'.png'];
            exportgraphics(f,imgName,'Resolution',150);
            figPara = Paragraph('Figure generated by the code:');
            figPara.Style = {Color('Black'),FontSize('10pt')};
            add(ch,figPara);

            img = Image(imgName);
            img.Style = {ScaleToFit};  
            add(ch,img);

            close(f); % close figure after capturing
        end
        %}

        % Add the chapter to the report
        add(rpt,ch);
    end

    close(rpt);
end
